#!/usr/bin/env dls-python

from pkg_resources import require
require('cothread')

import sys
import numpy
import cothread
from cothread.catools import *


tmbf = sys.argv[1]

def put(pv, value):
    caput('%s:%s' % (tmbf, pv), value)
def get(pv, **kargs):
    return caget('%s:%s' % (tmbf, pv), **kargs)


# Configure DDR for software single shot, grab a single shot
put('TRG:SYNC_S', 'Separate')
put('TRG:DDR:SEL_S', 'Soft')
put('TRG:DDR:MODE_S', 'One Shot')
put('DDR:LONGEN_S', 'Long')
put('DDR:INPUT_S', 'ADC')
put('TRG:DDR:ARM_S.PROC', 0)

print 'Waiting for capture'
cothread.Sleep(1)

offsets = get('ADC:OFFSET_S')
adc = get('DDR:LONGWF')
delta = 2 * adc.reshape((-1, 4)).mean(0)

# Correct for ADC output skew.  To avoid confusion this should probably be done
# closer to the hardware in the driver, but here is where it is for now!
skew = get('ADC:SKEW', datatype = int)
delta = numpy.roll(delta, -skew)

new_offsets = numpy.int_(numpy.round(offsets - delta))
print 'Updating offsets:', offsets, '=>', new_offsets
put('ADC:OFFSET_S', new_offsets)


# vim: set filetype=python:
