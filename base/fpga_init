#!/bin/sh
#
# fpga_init - Initialize Libera FPGA design.

sleep()
{
    echo -n .
    /bin/sleep $1
}


# Sends <data> to ADC SPI register <reg>, called as:
#
#   adc_spi <reg> <data>
#
adc_spi()
{
    devmem 0x1400c000 32 $((256*$1+$2))
}


# Sends <data> to ADC clock controller SPI register <reg>, called as:
#
#   adc_clk_spi <reg> <data>
#
adc_clk_spi()
{
    devmem 0x1400c004 32 $((256*$1+$2))
}


# Sends <data> to DAC SPI register <reg>, called as:
#
#   dac_spi <reg> <data>
#
dac_spi()
{
    devmem 0x1403c004 32 $((256*$1+$2))
    devmem 0x1403c008 32 0x2
}


# Sends <data> to DAC clock controller SPI register <reg>, called as:
#
#   dac_clk_spi <reg> <data>
#
dac_clk_spi()
{
    devmem 0x1403c004 32 $((256*$1+$2))
    devmem 0x1403c008 32 0x1
}


# ------------------------------------------------------------------------------

# Before we do anything further we need to deal with an unfortunate hardware
# discrepancy left to us by u-boot.  It turns out that the FPGA address space
# needs to run more slowly than configured by the default DLS Libera u-boot, and
# here is where we fix up this problem.
MSC2=0x48000010         # Configuration register for nCS(5:4)
devmem $MSC2 32 $(($(devmem $MSC2) | 0x0FF00000))



# Sleep after fp load
sleep 1

devmem 0x1403c01c 32 0x4


# FPGA design must be loaded before this script.

sleep 1


# Reset ADC 9510 clock controller
adc_clk_spi 0x00 0xbd
adc_clk_spi 0x00 0x99

# Enable OUT0 to OUT3
adc_clk_spi 0x3c 0x08       # OUT0 on, default power level
adc_clk_spi 0x3d 0x08       # OUT1
adc_clk_spi 0x3e 0x08       # OUT2
adc_clk_spi 0x3f 0x08       # OUT3
adc_clk_spi 0x40 0x03       # OUT4 off
adc_clk_spi 0x41 0x02       # OUT5 on, default power level
adc_clk_spi 0x45 0x1d       # Enable CLK1 in, disable REFIN and PLL
adc_clk_spi 0x5a 0x01       # Write update to all registers

# Configure clock high and low dividers for OUT0-3 and OUT5
adc_clk_spi 0x48 0x11
adc_clk_spi 0x49 0x00
adc_clk_spi 0x4a 0x11
adc_clk_spi 0x4b 0x01
adc_clk_spi 0x4c 0x11
adc_clk_spi 0x4d 0x02
adc_clk_spi 0x4e 0x11
adc_clk_spi 0x4f 0x03
adc_clk_spi 0x52 0x11
adc_clk_spi 0x53 0x00

adc_clk_spi 0x34 0x01       # Disable dividier for OUT5
adc_clk_spi 0x35 0x00       # Fine delay setting for OUT5
adc_clk_spi 0x36 0x07

# Perform clock synchronisation
adc_clk_spi 0x58 0x05
adc_clk_spi 0x5a 0x01
adc_clk_spi 0x58 0x01
adc_clk_spi 0x5a 0x01


# Configure ADC SPI
adc_spi 0xd0 0x00           # DLL off
adc_spi 0xe0 0x00           # Mode
adc_spi 0xf0 0x00           # PDN P (?)


devmem 0x1403c01c 32 0xc

dac_clk_spi 0x00 0xbd
dac_clk_spi 0x00 0x99
dac_clk_spi 0x5a 0x01
dac_clk_spi 0x00 0x99

dac_clk_spi 0x3d 0x0a   # OUT1 off
dac_clk_spi 0x3e 0x0a   # OUT2 off
dac_clk_spi 0x3f 0x0a   # OUT3 off
dac_clk_spi 0x40 0x03   # OUT4 off
dac_clk_spi 0x41 0x02
dac_clk_spi 0x45 0x1d
dac_clk_spi 0x52 0x00
dac_clk_spi 0x53 0x80

dac_clk_spi 0x35 0x3f
dac_clk_spi 0x34 0x00
dac_clk_spi 0x36 0x30
dac_clk_spi 0x5a 0x01

dac_clk_spi 0x58 0x01
dac_clk_spi 0x58 0x05
dac_clk_spi 0x58 0x01


devmem 0x1400c00c 32 0x01
devmem 0x1400c008 32 0x0
devmem 0x1400c00c 32 0x0

NCLK_ADC=38
while [ $NCLK_ADC -gt 0 ]; do
    # 2 deg ADC shift
    devmem 0x1400c00c 32 0x6
    NCLK_ADC=$(( $NCLK_ADC - 1 ))
done

devmem  0x1400C008 32 0x0001


#DAC HW RESET
devmem 0x1403c01c 32 0x8
sleep 1

######### Reset the DAC ######
dac_spi 0x00 0x20
sleep 2
dac_spi 0x00 0x00

dac_spi 0x00 0x02
dac_spi 0x02 0x03
dac_spi 0x03 0xff
dac_spi 0x05 0x90
dac_spi 0x06 0x00
dac_spi 0x08 0x00
dac_spi 0x16 0x03
